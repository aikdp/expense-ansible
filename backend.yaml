# #Creating backend app configuration using ANSIBLE
# - name: Creating backend configuration
#   hosts: backend
#   become: yes
#   vars:
#     mysql_root_password: ExpenseApp@1
#     login_host: mysql.telugudevops.online
#   tasks:
#     - name: ansible to install PyMySQL	#to connect mysql DB, need PyMySQL dependency
#       ansible.builtin.pip:
#         name: 
#         - PyMySQL
#         - cryptography
#         - boto3
#         - botocore
#         executable: pip3.9

#     - name: disable default nodejs
#       ansible.builtin.command: dnf module disable nodejs -y

#     - name: enable nodejs 20
#       ansible.builtin.command: dnf module enable nodejs:20 -y

#     - name: install nodejs
#       ansible.builtin.package:
#         name: "{{ item }}"
#         state: present
#       loop:
#       - nodejs
#       - mysql
    
#     - name: craete user expense
#       ansible.builtin.user:
#         name: expense

#     - name: Create app directory
#       ansible.builtin.file:
#         path: /app
#         state: directory
      
#     - name: downlaod the backend code
#       ansible.builtin.get_url:
#         url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
#         dest: /tmp/backend.zip

#     - name: Extract code
#       ansible.builtin.unarchive: 
#         src: /tmp/backend.zip
#         dest: /app
#         remote_src: yes    #Set to true to indicate the archived file is already on the remote system and not local to the Ansible controller.

#     - name: install npm dependencies
#       ansible.builtin.command: npm install
#       args:
#         chdir: /app

#     - name: Copy backend service file
#       ansible.builtin.copy:
#         src: backend.service
#         dest: /etc/systemd/system/backend.service

#     - name: ansible to install PyMySQL	#to connect mysql DB, need PyMySQL dependency
#       ansible.builtin.pip:
#         name: 
#         - PyMySQL
#         - cryptography    
#         - boto3
#         - botocore
#         executable: pip3.9

#     - name: load or import mysql schema
#       community.mysql.mysql_db:
#         login_user: root
#         login_password: "{{ mysql_root_password }}"
#         login_host: "{{ login_host }}"
#         target: /app/schema/backend.sql
#         name: all
#         state: import
        
#     # - name: start daemon reload
#     #   ansible.builtin.systemd_service:
#     #   state: restarted
#     #   daemon_reload: true
#     #   name: backend

#     - name: Start service
#       ansible.builtin.systemd_service:
#         daemon_reload: true
#         name: backend
#         state: restarted
#         # enabled: true




#PRCTCIng

#Creating BACKEND server using ANsible

- name: Craeting backend/web server
  hosts: backend
  become: yes
  vars:
    root_pass: "ExpenseApp@1"
    hosted_zone: "mysql.telugudevops.online"
  tasks:
    - name: ansible to install PyMySQL	#to connect mysql DB, need PyMySQL dependency
      ansible.builtin.pip:
        name: 
        - PyMySQL
        - cryptography    
        - boto3
        - botocore
        executable: pip3.9
        
    - name: Install nodejs package
      ansible.builtin.command: dnf module disable nodejs -y

    - name: Install nodejs package
      ansible.builtin.command: dnf module enable nodejs:20 -y

    - name: install nodejs client
      ansible.builtin.package:
        name: nodejs
        state: present

    # - name: check user expense,if not create user
    #   ansible.builtin.command: id expense
    #   ignore_errors: true

    - name: Create user expense
      ansible.builtin.user:
        name: expense

    - name: Create app directory
      ansible.builtin.file:
        path: /app
        state: directory
       
    - name: Download backend code
      ansible.builtin.get_url:
        url: https://expense-builds.s3.us-east-1.amazonaws.com/expense-backend-v2.zip
        dest: /tmp/backend.zip

    - name: Unarchive a file
      ansible.builtin.unarchive:
        src: /tmp/backend.zip
        dest: /app
        remote_src: yes

    # - name: install npm dependecies
    #   community.general.npm:
    #     path: /app
    - name: install npm dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: Copy backend service file
      ansible.builtin.copy:
        src: backend.service
        dest: /etc/systemd/system/backend.service

    - name: install mysql client
      ansible.builtin.package:
        name: mysql
        state: present

    - name: Laod schema to backend.sql
      community.mysql.mysql_db:
        login_host: "{{ hosted_zone }}"
        login_user: root
        login_password: "{{ root_pass }}"
        state: import
        name: all
        target: /app/schema/backend.sql

    - name: Start service
      ansible.builtin.systemd_service:
        name: backend
        state: restarted
        enabled: true
        daemon_reload: true

    

